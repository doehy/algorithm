t = int(input())
for i in range(t):
    n = int(input())
    text = list(input())
    min_count = 1
    temp = 1
    data = [text[0]]
    for i in range(1,len(text)):
        if text[i] == data[-1]:
            temp += 1
            min_count = max(min_count, temp)
        else:
            temp = 1
        data.append(text[i])
    print(min_count + 1)

# 각 문자가 < 또는 >인 길이 n 문자열이 제공됩니다.

# 1부터 n까지의 모든 i에 대해 문자가 ai와 ai+1, i를 비교한 결과를 나타내는 경우 n+1 요소로 구성된 배열 a는 문자열과 호환됩니다. e.:
# si는 < if and only if < ai+1;
# if > if > ai+1인 경우에만 si가 됩니다.
# 예를 들어, 배열 [1,2,5,4,2]는 문자열 <<>>와 호환됩니다. 해당 문자열과 호환되는 다른 어레이가 있습니다(예: [13,37,42,37,13]).

# 어레이 비용은 어레이에 포함된 여러 요소의 수입니다. 예를 들어, 4인 경우 [1,2,5,4,2]의 비용은 3입니다.

# 주어진 문자열과 호환되는 모든 배열 중 최소 비용을 계산해야 합니다.

# 입력
# 첫 번째 줄에는 하나의 정수 t(1≤t≤500), 즉 테스트 사례의 수가 포함됩니다.

# 각 테스트 사례는 두 줄로 구성됩니다. 첫 번째 줄에는 하나의 정수 n(1≤n≤100)이 포함되고 두 번째 줄에는 n개의 문자로 구성된 문자열이 포함됩니다. s의 각 문자는 < 또는 >입니다.
# 산출량
# 각 테스트 사례에 대해 지정된 문자열과 호환되는 모든 어레이 중 최소 비용인 정수 하나를 인쇄합니다.
# 메모
# 예제의 첫 번째 테스트 사례에서 배열은 [13,37,42,37,13]일 수 있습니다.

# 예제의 두 번째 테스트 사례에서 배열은 [42,37,13,37,42]일 수 있습니다.